name: "Demo: Variables, Secrets and Outputs"
run-name: Demonstrate usage of variables, secrets and outputs

on:
  push:
    branches: [ 'variables_secrets_outputs' ]

jobs:
  job1:
    name: Job 1
    runs-on: ubuntu-22.04
    outputs:
      my_first_output: ${{ steps.define_output.outputs.my_first_output }}
    environment: TEST
    env:
      name: ${{ VARS.NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Greet
        run: echo "Hello ${{ ENV.name }}!"

      - name: Define an output
        id: define_output
        run: |
          my_first_output="This variable was defined in job1."
          echo "my_first_output=$my_first_output" >> "$GITHUB_OUTPUT"

  job2:
    name: Try to output stuff
    runs-on: ubuntu-22.04
    steps:
      - name: Output TEST env’s NAME
        run: |
          echo "Here comes the value of the TEST environment’s NAME variable:"
          echo ">>${{ VARS.NAME }}<<"

      - name: Output TEST env’s secret TOP_SECRET
        run: |
          echo "Here comes the value of the TEST environment’s NAME variable:"
          echo ">>${{ SECRETS.TOP_SECRET }}<<"

      - name: Output job1’s output
        run: |
          echo "Here comes the output defined in job1:"
          echo ">>${{ needs.job1.outputs.my_first_output }}<<"

      - name: Output repository variable and secret
        run: |
          echo "Here come a variable and a secret declared on the repository scope:"
          echo "Repository variable: >>${{ VARS.REPO_VAR }}<<"
          echo "Repository secret: >>${{ SECRETS.REPO_SECRET }}<<"

  job3:
    name: Try to output stuff
    runs-on: ubuntu-22.04
    environment: TEST # Make variables and secrets within the TEST environment’s scope available
    needs: job1 # Wait for job1 to finish and make its outputs available
    steps:
      - name: Output TEST env’s NAME
        run: |
          echo "Here comes the value of the TEST environment’s NAME variable:"
          echo ">>${{ VARS.NAME }}<<"

      - name: Output TEST env’s secret TOP_SECRET
        run: |
          echo "Here comes the value of the TEST environment’s NAME variable:"
          echo ">>${{ SECRETS.TOP_SECRET }}<<"

      - name: Output job1’s output
        run: |
          echo "Here comes the output defined in job1:"
          echo ">>${{ needs.job1.outputs.my_first_output }}<<"